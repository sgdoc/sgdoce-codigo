<?php
/*
         * Copyright 2012 ICMBio
         * Este arquivo é parte do programa SISICMBio
         * O SISICMBio é um software livre; você pode redistribuí-lo e/ou modificá-lo dentro dos termos
         * da Licença Pública Geral GNU como publicada pela Fundação do Software Livre (FSF); na versão
         * 2 da Licença.
         *
         * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
         * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a
         * Licença Pública Geral GNU/GPL em português para maiores detalhes.
         * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título "LICENCA.txt",
         * junto com este programa, se não, acesse o Portal do Software Público Brasileiro no endereço
         * www.softwarepublico.gov.br ou escreva para a Fundação do Software Livre(FSF)
         * Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA
         * */

namespace Sgdoce\Model\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UnidadeOrgExterna
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VwUnidadeOrgInterna extends \Core_Model_Repository_Base
{
    /**
     * método que pesquisa assinatura para preencher autocomplete
     * @param string $term
     * @return multitype:NULL
     */
    public function searchUnidadeInterna ($term)
    {
        $search       = mb_strtolower($term,'UTF-8');
        $queryBuilder = $this->_em->createQueryBuilder();

        $field = $queryBuilder->expr()
            ->lower($queryBuilder->expr()->trim('u.noPessoa'));

        $term = mb_strtolower($term, 'UTF-8');
        $query = $queryBuilder->select('u.sqPessoa', 'u.noPessoa')
            ->from('app:VwUnidadeOrgInterna', 'vw')
            ->join('vw.sqPessoa', 'u')
            ->andWhere(
                $queryBuilder->expr()
                    ->like(
                        'clear_accentuation(' . $field .')',
                        $queryBuilder->expr()
                            ->literal($this->removeAccent('%' . $search . '%'))
                    )
            )
            ->andWhere($queryBuilder->expr()->eq('u.sqTipoPessoa', \Core_Configuration::getCorpTipoPessoaUnidadeOrg()))
            ->orderBy('u.noPessoa');

        $res = $query->getQuery()->execute();
        $out = array();
        foreach ($res as $item) {
            $out[$item['sqPessoa']] = $item['noPessoa'];
        }

        return $out;
    }
}