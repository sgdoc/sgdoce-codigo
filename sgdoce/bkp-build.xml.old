<?xml version="1.0" encoding="UTF-8"?>
<project name="SGDoc" default="build" basedir=".">
    <property name="source_code_app"  value="${basedir}/application" />
    <property name="build_dir" value="${basedir}/build" />
    <property name="resources" value="${build_dir}/scripts/resources" />
    <property name="jmeter-home" value="${basedir}/tests/gqs/apache-jmeter-2.12" />
    <property name="selenium_jar" value="${basedir}/tests/gqs/apache-jmeter-2.12/lib/selenium-server-standalone-2.44.0.jar" />
    <property name="migraAmbientesDbs-home" value="${basedir}/tests/gqs/migra_ambientes_dbs" />
  
    <echo message="Ant directory: ${ant.home}" />  
    <property name="lib.ant.dir" location="${ant.home}/lib" />
    <echo message="Ant lib directory: ${lib.ant.dir}" />
    
    
    <path id="ant.selenium.classpath">
        <pathelement
            location="${basedir}/tests/gqs/apache-jmeter-2.12/lib/selenium-2.44.0/selenium-java-2.44.0.jar" />

    </path>
    
    <echo message="Caminho do selenium jar em ant.selenium.classpath: ${basedir}/tests/gqs/apache-jmeter-2.12/lib/selenium-2.44.0/selenium-java-2.44.0.jar" />
             
    <taskdef
        name="selenese"
        classname="org.openqa.selenium.server.ant.SeleneseAntTask"
        classpathref="ant.selenium.classpath" />
    
    
    <target name="build-selenium">
        
        

        <echo message="suite directory: ${basedir}/tests/gqs/suite-selenium/suiteteste.suite.html" />
        
        <echo message="slenium jar directory: ${selenium_jar}" />
        <selenese
            suite="${basedir}/tests/gqs/suite-selenium/suiteteste.suite.html"
            browser="*firefox"
            results="${basedir}/seleniumresult.html"
            multiWindow="true"
            timeoutInSeconds="900"
            startURL="https://dsv.sgdoce.sisicmbio.icmbio.gov.br" />
    </target>
     

    <!-- ant-jmeter.jar comes with jmeter, be sure this is the release you have -->
    <path id="ant.jmeter.classpath">
        <pathelement
            location="${jmeter-home}/extras/ant-jmeter-1.1.1.jar" />
    </path>

    <taskdef
        name="jmeter"
        classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask"
        classpathref="ant.jmeter.classpath" />
    
    <target name="test" depends="clean">
        <jmeter
            jmeterhome="${jmeter-home}"
            resultlogdir="${build_dir}/resultsJmeter/jtl">
            <testplans dir="${basedir}/tests/gqs/suite-jmeter" includes="*.jmx"/>
      
            <property name="jmeter.save.saveservice.output_format" value="xml"/>
            <property name="log_file.jmeter.reporters.Summariser" value="filename-jmeter.log"/>
 
        </jmeter>
    </target>
    
    
    <!-- This is not needed for the plugin, but it produces a nice html report
    which can be saved usin jenkins's archive artifact feature -->
    <target name="report" depends="test">
        <xslt
            basedir="${build_dir}/resultsJmeter/jtl"
            destdir="${build_dir}/resultsJmeter/html"
            includes="*.jtl"
            style="${jmeter-home}/extras/jmeter-results-detail-report_21.xsl"/>
    </target>
  
    <!-- Fim das configurações do jmeter -->  
    <target name="clean" description="Clean up and create artifact directories">
        <delete dir="${build_dir}/code-browser" />
        <delete dir="${build_dir}/logs" />
        <delete dir="${build_dir}/pdepend" />
        <delete dir="${build_dir}/coverage" />
        <delete dir="${build_dir}/api" />
        <delete dir="${build_dir}/resultsJmeter" />
        <delete file="${build_dir}/resultsJmeter/jmeter.log"/>
        <delete dir="${build_dir}/resultsMigraDB"/>
        <delete dir="${build_dir}/resultsXebium"/>

        <mkdir dir="${build_dir}/code-browser" />
        <mkdir dir="${build_dir}/logs" />
        <mkdir dir="${build_dir}/pdepend" />
        <mkdir dir="${build_dir}/coverage" />
        <mkdir dir="${build_dir}/api" />
        <mkdir dir="${build_dir}/resultsJmeter" />
        <mkdir dir="${build_dir}/resultsJmeter/jtl" />
        <mkdir dir="${build_dir}/resultsJmeter/html" />
        <mkdir dir="${build_dir}/resultsMigraDB" />
        <mkdir dir="${build_dir}/resultsXebium" />
		
        <chmod dir="${build_dir}/logs" perm="0777" />
        <chmod dir="${build_dir}/code-browser" perm="0777" />
        <chmod dir="${build_dir}/pdepend" perm="0777" />
        <chmod dir="${build_dir}/coverage" perm="0777" />
        <chmod dir="${build_dir}/api" perm="0777" />
        <chmod dir="${build_dir}/resultsJmeter" perm="0777" />
        <chmod dir="${build_dir}/resultsJmeter/jtl" perm="0777" />
        <chmod dir="${build_dir}/resultsJmeter/html" perm="0777" />
        <chmod dir="${build_dir}/resultsMigraDB" perm="0777" />
        <chmod dir="${build_dir}/resultsXebium" perm="0777" />
    </target>
    
    <target name="migraAmbientesDbs" description="Copia o ultimo dump do ambiente de TCTI para o ambiente de teste">
        <exec dir="${migraAmbientesDbs-home}" executable="./migra_sisicmbio_ambientes.sh">
        </exec>
    </target>
    
    <target name="phpunit"
            description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <exec executable="phpunit"
              failonerror="false">
            <arg line="--configuration ${basedir}/tests/phpunit.xml"/>
        </exec>
    </target>
    
    <target name="phpunit-selenium"
            description="Run unit tests using phpunit-selenium and generates junit.xml and clover.xml">
        <exec executable="${basedir}/tests/gqs/suite-selenium/php-selenium/vendor/phpunit/phpunit/phpunit"
              failonerror="false">
            <arg line="--configuration ${basedir}/tests/gqs/suite-selenium/php-selenium/phpunit-selenium.xml"/>
        </exec>
    </target>

    <target name="parallelTasks"
            description="Run the phploc tasks in parallel using a maximum of 2 threads.">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend" />
                <antcall target="phpmd" />
                <antcall target="phpcpd" />
                <antcall target="phpcs" />
                <antcall target="phploc" />
                <antcall target="phpcb" />
            </sequential>
        </parallel>
    </target>
    
    <target name="phpdoc" description="Generate API documentation using PHPDocumentor">
        <exec executable="phpdoc" failonerror="false">
            <arg line=" -d ${basedir}/application
                        -t ${build_dir}/api
                        -ti 'SGDOCE'
                        -i '*.phtml'
                        --customtags @date
                        --parseprivate ON
                        --undocumentedelements ON
                        --output HTML:Smarty:PHP" />
        </exec>
    </target>
    
    <target name="phpdox" depends="phploc,phpcs,phpmd" description="Generate API documentation using phpDox">
        <exec executable="phpdox" dir="${basedir}/build" failonerror="false" >
        </exec>
    </target>

    <target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${build_dir}/logs/pmd-cpd.xml
                       --min-lines 5
                       --min-tokens 70
                       --exclude build,library,tests,docs,data, application/models/entity/
                       --suffixes php ${basedir}" />
        </exec>
    </target>

    <target name="phploc" description="Generate phploc.csv">
        <exec executable="phploc">
            <arg line="--log-csv ${build_dir}/logs/phploc.csv ${basedir}" />
        </exec>
    </target>

    <target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
        <exec executable="phpcs" output="${build_dir}/logs/checkstyle.xml">
            <arg line="--report=checkstyle
                       --extensions=php
                       --ignore=build,library/,tests,docs,data, application/models/entity
                       --standard=${resources}/phpcs-0.0.2.xml
                       ${basedir}" />
        </exec>
    </target>
    <target name="pdepend"
            description="Generate jdepend.xml and software metrics charts using PHP_Depend">
        <exec executable="pdepend">
            <arg
                line="--ignore=build,library/,tests,docs,data, application/models/entity/
                      --jdepend-xml=${build_dir}/logs/jdepend.xml
                      --jdepend-chart=${build_dir}/pdepend/dependencies.svg
                      --overview-pyramid=${build_dir}/pdepend/overview-pyramid.svg ${basedir}" />
        </exec>
    </target>
    <target name="phpmd" description="Generate pmd.xml using PHPMD">
        <exec executable="phpmd">
            <arg line="${basedir} xml ${resources}/phpmd.xml
                --reportfile ${build_dir}/logs/pmd.xml
                --exclude build,library/,tests,docs,data,application/models/entity/" />
        </exec>
    </target>
    <target name="phpcb"
            description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg line="--log ${build_dir}/logs
                    --ignore build,library/,tests,docs,data, application/models/entity/
                    --source ${basedir}
                    --output ${build_dir}/code-browser" />
        </exec>
    </target>
    <target name="build-test" depends="clean,parallelTasks,phpunit,phpdoc,test,report" />
    <target name="build-migra" depends="clean,migraAmbientesDbs,test,report" />
    <target name="build-clean-test-report" depends="clean,test,report" />
    <!--<target name="build" depends="clean" />-->
    <target name="build-all" depends="clean,parallelTasks,phpunit,phpdox" />
    <!--phpunit-selenium-->
    <target name="build-clean" depends="clean" />
    <target name="phpunit-selenium-clean" depends="clean,phpunit-selenium" />   
    <target name="build-selenium-suitehtml" depends="clean,build-selenium" />   
</project>